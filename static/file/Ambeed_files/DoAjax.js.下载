document.write("<script language='javascript' src='/static/js/tool/tool.js'></script>");
document.write("<script language='javascript' src='/static/js/tool/base64.js'></script>");
var isPost=false;//是否正在请求中。防止重复提交
var postUrl='';//正在请求中的rul
//处理业务
function _DoAjax(type,params,url,funcname){
	if(type!="GET"&&isPost){console.log("Repeat submit");return false;}
	funcname=isempty(funcname)?function(){}:funcname;
	isPost=true;
	var res;
	var encoded = base64encode(JSON.stringify(params));
	$.ajax({
		type: type,
		url: url,
		async: false,
		data:{params:encoded,_xsrf:getCookie("_xsrf")},
		beforeSend: function(XMLHttpRequest){
		},
		success:function(response){
			isPost=false;
			if(!isempty(response)){
				if(response.code == 200)
				{
					if(response.value.hasOwnProperty("isok")) {//是否有key isok 。有说明是业务处理。没有为获取数据
						if (response.value.isok) {
							funcname();//成功后执行回调
						} else {
							_ErrmsgShow(response.value.errmsg);
						}
					}else{
						res=response.value;
					}
				}else{
					_ErrmsgShow(response.message);
				}
			}else{
				_ErrmsgShow("No return");
			}
		},
		error: function(){
		//请求出错处理
		}
	});
	return res;
}

//ajax异步请求
function _DoAjaxAsyncTrue(type,params,url,funcname,msg,isHidLoad,timeOut){
	if(isHidLoad==null){isHidLoad=false;}
	if(type!="GET"&&isPost&&postUrl==url){console.log("Repeat submit");return false;}
	var loadIdx;
	if(type=="GET"){
		isPost=false;
	}else{
		isPost=true;
		postUrl=url;
		if(!isHidLoad){loadIdx = layer.load(2);}
	}
	if(isempty(timeOut)){timeOut=15000;}
	if($("#box_errmsg,.errorBox").length>0){//弹窗窗口的错误提示
		$("#box_errmsg,.errorBox").html('');
	}
	msg=isempty(msg)?'':msg;
	funcname=isempty(funcname)?function(){}:funcname;
	var encoded = base64encode(JSON.stringify(params));
	var ajaxTimeout=$.ajax({
		type: type,
		url: url,
		async: true,
		timeout :timeOut, //超时时间设置，单位毫秒
		data: {params: encoded, _xsrf: getCookie("_xsrf")},
		success: function (response) {
			isPost=false;
			postUrl='';
			if (!isempty(response)) {
				if (response.code == 200) {
					if(response.value.hasOwnProperty("isok")) {//是否有key isok 。有说明是业务处理。没有为获取数据
						if(response.value.isok){
							try{layer.closeAll();}catch (e){}
							if(msg!=""){aBox._warntip(msg);}//成功后提示
							funcname(response.value);
						}else{
							_ErrmsgShow(response.value.errmsg);
							return false;
						}
					}else{
						try{
							if(!isempty(response.value.pageindex)){
								page.pagesum=response.value.pagesum;
								page.pagesize=response.value.pagesize;
								page.total=response.value.total;
								page.pageindex=response.value.pageindex;
							}
							if(response.value.result.length==0&&$("table #tbody").length>0){$("#tbody").html('<tr class="textC"><td colspan="20">No Data</td></tr>');}
						}catch (e){}
						funcname(response.value);
					}
				}else{
					_ErrmsgShow(response.message);
				}
			}
		},complete : function(XMLHttpRequest,status){ //请求完成后最终执行参数
			if(!isempty(loadIdx)){layer.close(loadIdx);}//关闭加载
	　　　	isPost=false;　
			postUrl='';　　　　
			if(status=='timeout'){//超时,status还有success,error等值的情况
	 　　　　　 ajaxTimeout.abort();//终止ajax请求
				$("table tbody:not(:has(tr))").html('<tr class="text-c"><td colspan="99" style="text-align: center;min-height: 40px;">No Data</td></tr>');　	　　　　}
	　　}
	});
}
function _showOkMsg(msg){
    $(".errorBox").css("display","inline-block").html(msg).css("color","green");
}
function _showErrMsg(msg){
    $(".errorBox").css("display","inline-block").html(msg).css("color","red");
}

//错误提示
function _ErrmsgShow(msg){
	if($(".dv_load_gif").length>0){$(".dv_load_gif").remove();}
	if($("#box_errmsg,.errorBox").length>0){//弹窗窗口的错误提示
		$("#box_errmsg,.errorBox").css("display","inline-block").html(msg);
	}else{
		aBox._warn(msg);
	}
}

//检查参数,params:需检查的json,nochks:可为空的key数组
function _chkParams(params,nochks){
	if($("#box_errmsg").length>0){$("#box_errmsg").html('');}
	nochks=isempty(nochks)?[]:nochks;
	var chkres={"chkok":true,"errmsg":''};
	if(params!=""){
		for (var Key in params) {
			if($.inArray(Key,nochks)==-1){
				if(params[Key]==""||params[Key]==undefined){
					chkres={"chkok":false,"errmsg":Key+' cannot be empty'};
					break;
				}
			}
		}
	}else{
		chkres={"chkok":false,"errmsg":'Parameter error'};
	}
	return chkres;
}